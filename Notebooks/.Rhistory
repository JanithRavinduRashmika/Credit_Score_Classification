ON ucb.Dept = majors.Dept")
data(mtcars)
mtcars2 = mtcars
car_brands <- data.frame(
car_name = rownames(mtcars), brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant', 'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat', 'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac', 'Fiat', 'Porsche', 'Lotus', 'Ford') )
mtcars2$car_name <- rownames(mtcars)
mtcars2
mtcars
car_brands
mtcars2
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
query5 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
INNER JOIN car_brands c ON m.car_name = c.car_name"
result5 <- sqldf(query5)
print(result5)
# 6
query6 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
LEFT JOIN car_brands c ON m.car_name = c.car_name"
result6 <- sqldf(query6)
print(result6)
# 7
query7 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
RIGHT JOIN car_brands c ON m.car_name = c.car_name"
result7 <- sqldf(query7)
print(result7)
# 8
query8 <- "SELECT am, AVG(mpg) AS avg_mpg
FROM mtcars
GROUP BY am"
result8 <- sqldf(query8)
print(result8)
# 8
query8 <- "SELECT am, AVG(mpg) AS avg_mpg FROM mtcars GROUP BY am"
result8 <- sqldf(query8)
print(result8)
# 7
query7 <- "SELECT m.car_name, m.mpg, c.brand FROM mtcars m RIGHT JOIN car_brands c ON m.car_name = c.car_name"
result7 <- sqldf(query7)
print(result7)
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
query5 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
INNER JOIN car_brands c ON m.car_name = c.car_name"
result5 <- sqldf(query5)
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
# 6
query6 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
LEFT JOIN car_brands c ON m.car_name = c.car_name"
result6 <- sqldf(query6)
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
query5 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars m
INNER JOIN car_brands c ON m.car_name = c.car_name"
result5 <- sqldf(query5)
# 6
query6 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
LEFT JOIN car_brands c ON m.car_name = c.car_name"
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars2"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars2"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars2 WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
query5 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
INNER JOIN car_brands c ON m.car_name = c.car_name"
result5 <- sqldf(query5)
print(result5)
# 6
query6 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
LEFT JOIN car_brands c ON m.car_name = c.car_name"
result6 <- sqldf(query6)
print(result6)
# 7
query7 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
RIGHT JOIN car_brands c ON m.car_name = c.car_name"
result7 <- sqldf(query7)
print(result7)
# 8
query8 <- "SELECT am, AVG(mpg) AS avg_mpg
FROM mtcars2
GROUP BY am"
result8 <- sqldf(query8)
print(result8)
library(sqldf)
data(mtcars)
car_brands <- data.frame(
car_name = rownames(mtcars),
brand = c('Mazda', 'Mazda', 'Datsun', 'Datsun', 'Hornet', 'Hornet', 'Valiant',
'Duster', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc', 'Merc',
'Merc', 'Cadillac', 'Cadillac', 'Lincoln', 'Chrysler', 'Fiat',
'Honda', 'Toyota', 'Toyota', 'Dodge', 'AMC', 'Camaro', 'Pontiac',
'Fiat', 'Porsche', 'Lotus', 'Ford')
)
mtcars2 <- mtcars
mtcars2$car_name <- rownames(mtcars)
# 1
query1 <- "SELECT * FROM mtcars2"
result1 <- sqldf(query1)
print(result1)
# 2
query2 <- "SELECT mpg, hp FROM mtcars2"
result2 <- sqldf(query2)
print(result2)
# 3
query3 <- "SELECT * FROM mtcars2 WHERE mpg > 20"
result3 <- sqldf(query3)
print(result3)
# 4
query4 <- "SELECT * FROM car_brands WHERE brand LIKE 'M%'"
result4 <- sqldf(query4)
print(result4)
# 5
query5 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
INNER JOIN car_brands c ON m.car_name = c.car_name"
result5 <- sqldf(query5)
print(result5)
# 6
query6 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
LEFT JOIN car_brands c ON m.car_name = c.car_name"
result6 <- sqldf(query6)
print(result6)
# 7
query7 <- "SELECT m.car_name, m.mpg, c.brand
FROM mtcars2 m
RIGHT JOIN car_brands c ON m.car_name = c.car_name"
result7 <- sqldf(query7)
print(result7)
# 8
query8 <- "SELECT am, AVG(mpg) AS avg_mpg
FROM mtcars2
GROUP BY am"
result8 <- sqldf(query8)
print(result8)
install.packages("sparklyr")
library(sparklyr)
spark_install()
install.packages("rvest")
# Load necessary libraries
library(rvest)
library(dplyr)
# Define the URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/List_of_Formula_One_drivers"
# Read the HTML content from the website
webpage <- read_html(url)
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]') %>%
html_table(fill = TRUE)
# Convert the table to a data frame
drivers_df <- drivers_table[[1]]
# Inspect the first few rows of the data frame
head(drivers_df)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(Wins), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
# Load necessary libraries
library(rvest)
library(dplyr)
# Define the URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/List_of_Formula_One_drivers"
# Read the HTML content from the website
webpage <- read_html(url)
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]') %>%
html_table(fill = TRUE)
# Convert the table to a data frame
drivers_df <- drivers_table[[1]]
# Inspect the first few rows of the data frame
head(drivers_df)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(Wins), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
# Load necessary libraries
library(rvest)
library(dplyr)
# Define the URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/List_of_Formula_One_drivers"
# Read the HTML content from the website
webpage <- read_html(url)
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]') %>%
html_table(fill = TRUE)
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_element('table')%>%
html_table(fill = TRUE)
drivers_table
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_nodes(".wikitable.sortable.sticky-header.jquery-tablesorter") %>%
html_table(fill = TRUE)
# Convert the table to a data frame
drivers_df <- drivers_table[[1]]
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_elements("table") %>%
html_table(fill = TRUE)
drivers_table
# Convert the table to a data frame
drivers_df <- drivers_table[[3]]
# Inspect the first few rows of the data frame
head(drivers_df)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(Wins), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
# Load necessary libraries
library(rvest)
library(dplyr)
# Define the URL of the Wikipedia page
url <- "https://en.wikipedia.org/wiki/List_of_Formula_One_drivers"
# Read the HTML content from the website
webpage <- read_html(url)
# Scrape the table with the list of Formula One drivers
drivers_table <- webpage %>%
html_elements("table") %>%
html_table(fill = TRUE)
# Convert the table to a data frame
drivers_df <- drivers_table[[3]]
# Inspect the first few rows of the data frame
head(drivers_df)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(Wins), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
ionality
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(Wins), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(`Drivers' Championshi…`), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(`Drivers' Championships`), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
largest_wins_country <- country_wins %>%
slice(1)
# Print the country with the largest number of wins
print(largest_wins_country)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(`Race wins`), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
largest_wins_country <- country_wins %>%
slice(1)
# Print the country with the largest number of wins
print(largest_wins_country)
# Answering Question 2: Who has the most Championships?
most_championships <- drivers_df %>%
arrange(desc(as.numeric(Championships))) %>%
slice(1)
# Inspect the first few rows of the data frame
head(drivers_df,20)
# Answering Question 2: Who has the most Championships?
most_championships <- drivers_df %>%
arrange(desc(as.numeric(`Drivers' Championships`))) %>%
slice(1)
# Print the driver with the most Championships
print(most_championships)
drivers_df <- drivers_df %>%
mutate(`Drivers' Championships` = substr(`Drivers' Championships`, 1, 1))
# Inspect the first few rows of the data frame
head(drivers_df,20)
# Answering Question 2: Who has the most Championships?
most_championships <- drivers_df %>%
arrange(desc(as.numeric(`Drivers' Championships`))) %>%
slice(1)
# Print the driver with the most Championships
print(most_championships)
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(Championships)), !is.na(as.numeric(`Pole positions`))) %>%
select(Championships = as.numeric(Championships), Poles = as.numeric(`Pole positions`))
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(`Drivers' Championships`)), !is.na(as.numeric(`Pole positions`))) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
library(rvest)
library(dplyr)
url <- "https://en.wikipedia.org/wiki/List_of_Formula_One_drivers"
webpage <- read_html(url)
drivers_table <- webpage %>%
html_elements("table") %>%
html_table(fill = TRUE)
drivers_df <- drivers_table[[3]]
head(drivers_df,20)
drivers_df <- drivers_df %>%
mutate(`Drivers' Championships` = substr(`Drivers' Championships`, 1, 1))
head(drivers_df,20)
# Answering Question 1: Which country has the largest number of wins?
country_wins <- drivers_df %>%
group_by(Nationality) %>%
summarise(Total_Wins = sum(as.numeric(`Race wins`), na.rm = TRUE)) %>%
arrange(desc(Total_Wins))
largest_wins_country <- country_wins %>%
slice(1)
print(largest_wins_country)
# Answering Question 2: Who has the most Championships?
most_championships <- drivers_df %>%
arrange(desc(as.numeric(`Drivers' Championships`))) %>%
slice(1)
print(most_championships$`Driver name`)
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(`Drivers' Championships`)), !is.na(as.numeric(`Pole positions`))) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(`Drivers' Championships`), na.rm = TRUE), !is.na(as.numeric(`Pole positions`),na.rm = TRUE)) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(`Drivers' Championships`)), !is.na(as.numeric(`Pole positions`))) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
colnames(drivers_df)
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(`Drivers' Championships`)), !is.na(as.numeric(`Pole positions`))) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(drivers_df$`Drivers' Championships`)), !is.na(as.numeric(drivers_df$`Pole positions`))) %>%
select(Championships = as.numeric(`Drivers' Championships`), Poles = as.numeric(`Pole positions`))
# Answering Question 3: Is there a relation between the number of Championships won and the number of race pole positions?
championships_poles <- drivers_df %>%
filter(!is.na(as.numeric(drivers_df$`Drivers' Championships`)), !is.na(as.numeric(drivers_df$`Pole positions`))) %>%
select(Championships = as.numeric(drivers_df$`Drivers' Championships`), Poles = as.numeric(drivers_df$`Pole positions`))
data <- read.csv("../Data/cleanedNotRecoded.csv")
library(FactoMineR)
library(factoextra)
setwd("E:\\Credit_Score_Classification\\Notebooks")
data <- read.csv("../Data/cleanedNotRecoded.csv")
data$Month <- as.factor(data$Month)
data$Payment_Behaviour <- as.factor(data$Payment_Behaviour)
data$Payment_of_Min_Amount <- as.factor(data$Payment_of_Min_Amount)
data$Credit_Mix <- as.factor(data$Credit_Mix)
str(data)
df <- data[, -c(1,2,4,6,7,28)]
str(df)
res.famd = FAMD(df,graph=FALSE, ncp=15)
res.famd$eig
fviz_eig(res.famd, ncp=15)
